service: kore-lambda
useDotenv: true
custom:
    bundle:
        linting: false
        excludeFiles: '**/*.spec.ts'
    serverless-offline:
        httpPort: ${env:PORT, 8080}
        noPrependStageInUrl: true

provider:
    name: aws
    runtime: nodejs14.x
    stage: ${opt:stage, 'offline'}
    region: ${opt:region, 'ap-northeast-1'}
    memorySize: 512
    timeout: 15
    logRetentionInDays: 90
    logs:
        httpApi: true
    httpApi:
        cors: true
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:DescribeTable
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/booking_detail"
resources:
    Resources:
        BookingDetailTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: booking_detail
                AttributeDefinitions:
                    - AttributeName: id
                      AttributeType: S
                KeySchema:
                    - AttributeName: id
                      KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
functions:
    app:
        handler: src/handler.handler
        events:
            - httpApi:
                  path: '/{proxy+}'
                  method: '*'

package:
    individually: true
    excludeDevDependencies: true
    exclude:
        - tests/**
        - .circleci/config.yml
        - .git
        - package-lock.json
        - yarn.lock
        - node_modules/aws-sdk/**
        - node_modules/serverless/**

plugins:
    - serverless-dotenv-plugin
    - serverless-bundle
    - serverless-offline
